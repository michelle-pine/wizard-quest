{"version":3,"sources":["media/loader.svg","reducers/index.js","store/index.js","components/Button/Button.js","App.js","components/Loader/Loader.js","components/Modal/Modal.js","components/GoDialog/GoDialog.js","components/AudioDialog/AudioDialog.js","constants/steps.js","pages/Step/Step.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","state","type","store","createStore","Button","props","className","onClick","this","text","React","Component","defaultProps","App","onButtonClick","bind","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","e","fadeOut","id","Loader","src","loader","Modal","title","children","onClose","PropTypes","string","func","GoDialog","onModalClose","modalOpen","loaderShow","desired","step","setState","cur","isEqual","epsilon","console","log","stepNum","preventDefault","modal","target","href","renderedLoader","description","AudioDialog","audioSrc","autoPlay","controls","button","STEPS","0","1","2","3","Step","parseInt","match","params","prevProps","history","renderStepType","Boolean","window","location","hostname","routing","basename","exact","path","component","element","document","getElementById","classList","remove","add","push","setTimeout","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4fe140f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.623fde5f.svg\";","\nfunction getInitialState() {\n\n  const initialState = {\n  };\n\n  return initialState;\n}\n\nfunction rootReducer(state = getInitialState(), action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nconst store = createStore(rootReducer);\nexport default store;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <button className=\"quest-button\" onClick={this.props.onClick}>\n        {this.props.text}\n      </button>\n    );\n  }\n};\n\nButton.defaultProps = {\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport './App.scss';\nimport Button from './components/Button/Button'\nimport fadeOut from './index'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onButtonClick = this.onButtonClick.bind(this);\n    navigator.geolocation.getCurrentPosition(function(position){\n      return [position.coords.longitude, position.coords.latitude];\n    });\n      \n  }\n  \n\n  onButtonClick(e) {\n    fadeOut(this.props, e, \"step/1\");\n  }\n  \n  render() {\n    return (\n      <div id=\"content-wrapper\" className=\"content-wrapper fade-in\">\n        <div className=\"content-container\">\n          <h1 className=\"app-title\">\n            WizardQuest\n          </h1>\n        </div>\n        <Button text=\"Start\" onClick={this.onButtonClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loader.scss';\nimport loader from '../../media/loader.svg';\n\n\nclass Loader extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className=\"loader-wrapper\">\n        <img src={loader} />\n      </div>\n    );\n  }\n};\n\nLoader.defaultProps = {\n\n};\n\nLoader.propTypes = {\n\n};\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.scss';\nimport Button from '../Button/Button'\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div className=\"modal-container\">\n        <div id=\"dialog-modal\" className=\"modal\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>{this.props.title}</h2>\n            </div>\n            <div className=\"modal-body\">\n              {this.props.children}\n              <Button text=\"Close\" onClick={this.props.onClose}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nModal.defaultProps = {\n  title: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nModal.propTypes = {\n\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GoDialog.scss';\nimport fadeOut from '../../index';\nimport Button from '../../components/Button/Button';\nimport Loader from '../../components/Loader/Loader'\nimport Modal from '../Modal/Modal';\nimport { isEqual } from 'geolocation-utils';\n\n\nclass GoDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onButtonClick = this.onButtonClick.bind(this);\n    this.onModalClose = this.onModalClose.bind(this);\n    \n    this.state = {\n      modalOpen: false,\n      loaderShow: false,\n\n    }\n  }\n\n\n  onButtonClick(e) {\n    const desired = {longitude: this.props.step.longitude, latitude: this.props.step.latitude};\n    this.setState({loaderShow: true});\n    navigator.geolocation.getCurrentPosition(function(position){\n      let cur = [position.coords.longitude, position.coords.latitude];\n      if (isEqual(desired, cur, this.props.step.epsilon)) {\n        console.log(position)\n        fadeOut(this.props, e, `/step/${this.props.stepNum + 1}`);\n      }\n      else {\n        this.setState({loaderShow: false});\n        this.setState({modalOpen: true});\n      }\n    }.bind(this));\n  }\n\n  onModalClose(e) {\n    e.preventDefault();\n    this.setState({modalOpen: false});\n  }\n\n  render() {\n    let modal = null;\n    if (this.state.modalOpen) {\n      modal = <Modal title=\"You're not there yet!\" onClose={this.onModalClose}>\n        <div>You haven't arrived at the right location yet. If you don't know where you're going, check out the <a target=\"_blank\" href=\"https://www.northeastern.edu/campusmap/printable/campusmap.pdf\">campus map</a></div>\n      </Modal>\n    }\n    let renderedLoader = null;\n    if (this.state.loaderShow) {\n      renderedLoader = <Loader />;\n    }\n    return (\n    <div className=\"go-dialog\">\n      <div className=\"content-container\">\n        {this.props.step.description}\n      </div>\n      <div className=\"button-wrapper\">\n        <Button text=\"I've Arrived\" onClick={this.onButtonClick} />\n      </div>\n      {modal}\n      {renderedLoader}\n    </div>\n    );\n  }\n};\n\nGoDialog.defaultProps = {\n\n};\n\nGoDialog.propTypes = {\n  step: PropTypes.object,\n  stepNum: PropTypes.number,\n  history: PropTypes.object,\n};\n\nexport default GoDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AudioDialog.scss';\nimport fadeOut from '../../index';\nimport Button from '../../components/Button/Button'\nimport ReactAudioPlayer from 'react-audio-player';\n\nclass AudioDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.onButtonClick = this.onButtonClick.bind(this);\n  }\n\n  onButtonClick(e) {\n    fadeOut(this.props, e, `/step/${this.props.stepNum + 1}`);\n  }\n\n  render() {\n    return (\n    <div className=\"audio-dialog\">\n      <div className=\"content-container audio-container\">\n        <ReactAudioPlayer\n          src={this.props.step.audioSrc}\n          autoPlay\n          controls\n        />\n      </div>\n      <div className=\"button-wrapper\">\n        <Button text={this.props.step.button} onClick={this.onButtonClick} />\n      </div>\n    </div>\n    );\n  }\n};\n\nAudioDialog.defaultProps = {\n\n};\n\nAudioDialog.propTypes = {\n  step: PropTypes.object,\n  stepNum: PropTypes.number,\n  history: PropTypes.object,\n};\n\nexport default AudioDialog;\n","export const STEPS = {\n  0: {\n    type: \"none\",\n  },\n  1: {\n    type: \"go-dialog\",\n    latitude: 42.3371,\n    longitude: -71.0905,\n    // latitude: 42.3279784,\n    // longitude: -71.10478599999999,\n    epsilon: .0004,\n    description: \"Go to Centennial Common\"\n  },\n  2: {\n    type: \"audio\",\n    button: \"Next\",\n    audioSrc: \"https://www.soundboard.com/mediafiles/mz/Mzg1ODMxNTIzMzg1ODM3_JzthsfvUY24.MP3\"\n  },\n  3: {\n    type: \"\"\n  }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Step.scss';\nimport GoDialog from '../../components/GoDialog/GoDialog'\nimport AudioDialog from '../../components/AudioDialog/AudioDialog'\nimport { STEPS } from '../../constants/steps'\n\nclass Step extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: parseInt(props.match.params.id),\n      step: STEPS[props.match.params.id]\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.setState({\n        id: parseInt(this.props.match.params.id),\n        step: STEPS[this.props.match.params.id]\n      });\n    }\n  }\n\n  renderStepType() {\n    if (this.state.step.type === \"go-dialog\") {\n      return (\n        <GoDialog history={this.props.history} step={this.state.step} stepNum={this.state.id} />\n      )\n    } else if (this.state.step.type === \"audio\") {\n      return <AudioDialog history={this.props.history} step={this.state.step} stepNum={this.state.id} />;\n    }\n  }\n\n  render() {\n    return (\n    <div id=\"content-wrapper\" className=\"content-wrapper fade-in\">\n      {this.renderStepType()}\n    </div>\n    );\n  }\n};\n\nStep.defaultProps = {\n\n};\n\nStep.propTypes = {\n\n};\n\nexport default Step;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { Route, HashRouter as Router } from 'react-router-dom'\n\nimport './index.scss';\n\n//stores\nimport store from './store/index'\n\nimport App from './App';\nimport Step from './pages/Step/Step';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n  <Provider store={store}>\n    <div className=\"page-wrapper\">\n      <Router basename='/'>\n        <div>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/step/:id\" component={Step} />\n        </div>\n      </Router>\n    </div>\n  </Provider>\n);\n\nconst fadeOut = function(props, e, location) {\n  e.preventDefault();\n  let element = document.getElementById(\"content-wrapper\");\n  element.classList.remove('fade-in');\n  element.classList.add('fade-out');\n  const { history: { push } } = props;\n  setTimeout(()=>push(location), 490);\n}\n\nexport default fadeOut;\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}